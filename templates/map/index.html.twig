{% extends 'base.html.twig' %}

{% block title %}Map of Points of Interest{% endblock %}

{% block body %}
<div class="container mt-4">
    <h1 class="text-center mb-4">Points of Interest in Rouen</h1>

    <!-- Map Container -->
    <div id="map" class="rounded shadow-sm" style="height: 500px; margin-bottom: 20px;"></div>

    <!-- Filter by Type Dropdown -->
    <div class="mb-4">
        <select id="service-filter" class="form-select">
            <option value="">S√©lectionnez une cat√©gorie</option>
            <option value="cafe">‚òï Caf√©</option>
            <option value="museum"> üñºÔ∏èMus√©es</option>
            <option value="park">üå≥ Parcs </option>
        </select>
    </div>

    <!-- List of Places -->
    <h2 class="mt-4">List of Places</h2>
    <div class="table-responsive">
        <table class="table table-striped table-bordered table-hover">
            {# <thead class="table-dark">
                <tr>
                    <th>Id</th>
                    <th>Name</th>
                    <th>Type</th>
                    <th>Address</th>
                    <th>Website</th>
                    <th>Phone</th>
                </tr>
            </thead> #}
            <tbody id="places-list">
                <tr>
                    <td colspan="6" class="text-center">Loading places...</td>
                </tr>
            </tbody>
        </table>
    </div>
</div>

<!-- Leaflet.js & Bootstrap -->
<link rel="stylesheet" href="https://unpkg.com/leaflet/dist/leaflet.css" />
<script src="https://unpkg.com/leaflet/dist/leaflet.js"></script>
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css">
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>

<script>
    // Initialize the map
    var map = L.map('map').setView([49.4431, 1.0993], 13);
    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png').addTo(map);

    // Store the current markers for the map
    var markers = [];

    // Function to fetch and display services
    function fetchServices(filterType = '') {
        fetch(`/api/services?type=${filterType}`)
            .then(response => response.json())
            .then(data => {
                let placesList = document.getElementById('places-list');
                placesList.innerHTML = ''; // Clear the current list

                // Clear existing markers
                markers.forEach(marker => marker.remove());
                markers = [];

                data.forEach(service => {
                    // Add marker to the map
                    var marker = L.marker([service.latitude, service.longitude])
                        .addTo(map)
                        .bindPopup(`<b>${service.name}</b><br>${service.type}`);
                    markers.push(marker);

                    // Add service to the table
                    let row = document.createElement('tr');
                    row.innerHTML = `
                        {# <td>${service.id}</td> #}
                        <td><a class = "list-places-a" href="/place/${service.id}">${service.name}</a></td>
                        <td>${service.type}</td>
                        {# <td>${service.address ? service.address : 'No address available'}</td> #}
                        {# <td>${service.website ? `<a href="${service.website}" target="_blank">Visit</a>` : 'No website'}</td> #}
                        {# <td>${service.phone || 'No phone'}</td> #}
                    `;
                    placesList.appendChild(row);
                });
            })
            .catch(error => {
                console.error('Error loading data:', error);
                document.getElementById('places-list').innerHTML = `
                    <tr><td colspan="6" class="text-center text-danger">Error loading places.</td></tr>
                `;
            });
    }

    // Initial fetch without filters
    fetchServices();

    // Listen for changes on the filter dropdown
    document.getElementById('service-filter').addEventListener('change', function () {
        var selectedType = this.value;
        fetchServices(selectedType); // Fetch services based on selected type
    });
</script>

{% endblock %}