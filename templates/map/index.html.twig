{% extends 'base.html.twig' %}

{% block title %}Carte{% endblock %}

{% block body %}
<div class="container mt-4">
    <h1 class="text-center mb-4">Points of Interest in Rouen</h1>

    <!-- Map Container -->
    <div id="map" class="rounded shadow-sm" style="height: 500px; margin-bottom: 20px;"></div>

    <!-- Filter by Type Dropdown -->
    <div class="mb-4">
        <select id="service-filter" class="form-select">
            <option value="">Sélectionnez une catégorie</option>
            <option value="fast_food">🍔 Fast Food</option>
            <option value="bakery">🍞 Bakery</option>
            <option value="supermarket">🛒 Supermarket</option>
            <option value="convenience">🛍️ Convenience Store</option>
            <option value="mall">🏬 Mall</option>
            <option value="fuel">⛽ Fuel</option>
            <option value="parking">🅿️ Parking</option>
            <option value="bicycle_rental">🚲 Bicycle Rental</option>
            <option value="pharmacy">💊 Pharmacy</option>
            <option value="hospital">🏥 Hospital</option>
            <option value="cinema">🎥 Cinema</option>
            <option value="theatre">🎭 Theatre</option>
            <option value="nightclub">🎉 Nightclub</option>
            <option value="library">📚 Library</option>
        </select>
    </div>

    <!-- List of Places -->
    <h2 class="mt-4" id="places-header" style="display: none;">List of Places</h2>
    <div class="table-responsive" id="places-list-container" style="display: none;">
        <table class="table table-striped table-bordered table-hover">
            <tbody id="places-list">
                <tr>
                    <td colspan="6" class="text-center">Please select a category.</td>
                </tr>
            </tbody>
        </table>
    </div>
</div>

<!-- Leaflet.js & Bootstrap -->
<link rel="stylesheet" href="https://unpkg.com/leaflet/dist/leaflet.css" />
<script src="https://unpkg.com/leaflet/dist/leaflet.js"></script>
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css">
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>

<script>
    // Initialize the map
    var map = L.map('map').setView([49.4431, 1.0993], 13);

    // Add OpenStreetMap tiles
    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png').addTo(map);

    // Marker for user location ("vous êtes ici")
    var userLocationMarker = L.marker([49.4431, 1.0993]).addTo(map);
    userLocationMarker.bindPopup("Vous êtes ici").openPopup();

    // Store the current markers for the map
    var markers = [];

    // Function to fetch and display services
    function fetchServices(filterType = '') {
        fetch(`/api/services?type=${filterType}`)
            .then(response => response.json())
            .then(data => {
                let placesList = document.getElementById('places-list');
                let placesListContainer = document.getElementById('places-list-container');
                let placesHeader = document.getElementById('places-header');
                placesList.innerHTML = ''; // Clear the current list

                // Clear existing markers from the map
                markers.forEach(marker => marker.remove());
                markers = [];

                // If no services found, show a message
                if (data.length === 0) {
                    placesList.innerHTML = '<tr><td colspan="6" class="text-center">No places found.</td></tr>';
                    placesListContainer.style.display = 'block';
                    placesHeader.style.display = 'block';
                } else {
                    // Loop over services and add markers and table rows
                    data.forEach(service => {
                        // Add marker to the map
                        var marker = L.marker([service.latitude, service.longitude])
                            .addTo(map)
                            .bindPopup(`<b>${service.name}</b><br>${service.type}`);
                        markers.push(marker);

                        // Add service to the table
                        let row = document.createElement('tr');
                        row.innerHTML = `
                            <td><a class="list-places-a" href="/place/${service.id}">${service.name}</a></td>
                            <td>${service.type}</td>
                        `;
                        placesList.appendChild(row);
                    });

                    placesListContainer.style.display = 'block';
                    placesHeader.style.display = 'block';
                }
            })
            .catch(error => {
                console.error('Error loading data:', error);
                document.getElementById('places-list').innerHTML = `
                    <tr><td colspan="6" class="text-center text-danger">Error loading places.</td></tr>
                `;
            });
    }

    // Listen for changes on the filter dropdown
    document.getElementById('service-filter').addEventListener('change', function () {
        var selectedType = this.value;
        
        // Hide the places list and markers before fetching data
        document.getElementById('places-list-container').style.display = 'none';
        document.getElementById('places-header').style.display = 'none';
        
        // If a type is selected, fetch services, else leave the map and table empty
        if (selectedType) {
            fetchServices(selectedType); // Fetch services based on selected type
        } else {
            // Clear the map and table if no type is selected
            markers.forEach(marker => marker.remove());
            markers = [];
            userLocationMarker.addTo(map); // Ensure "vous êtes ici" marker stays visible
        }
    });
</script>

{% endblock %}
