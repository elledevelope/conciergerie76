{% extends 'base.html.twig' %}

{% block title %}Carte{% endblock %}

{% block body %}
<div class="container mt-4">
    <h1 class="text-center mb-4">Points of Interest in Rouen</h1>

    <!-- Map Container -->
    <div id="map" class="rounded shadow-sm" style="height: 500px; margin-bottom: 20px;"></div>

    <!-- Filter by Type Dropdown -->
    <div class="mb-4">
        <select id="service-filter" class="form-select">
            <option value="">Sélectionnez une catégorie</option>
            <option value="fast_food">🍔 Restauration rapide</option>
            <option value="boulangerie">🍞 Boulangerie</option>
            <option value="supermarche">🛒 Supermarché</option>
            <option value="centre_commercial">🏬 Centre commercial</option>
            <option value="fuel">⛽ Station-service</option>
            <option value="parking">🅿️ Parking</option>
            <option value="bicycle_rental">🚲 Location de vélos</option>
            <option value="pharmacy">💊 Pharmacie</option>
            <option value="hospital">🏥 Hôpital</option>
            <option value="cinema">🎥 Cinéma</option>
            <option value="theatre">🎭 Théâtre</option>
            <option value="nightclub">🎉 Boîte de nuit</option>
            <option value="library">📚 Bibliothèque</option>
            <option value="cafe">☕ Café</option>
            <option value="museum">🏛️ Musée</option>
            <option value="park">🌳 Parc</option>
            <option value="bank">🏦 Banque</option>
            <option value="atm">🏧 Distributeur</option>
            <option value="post_office">📮 Bureau de poste</option>
            <option value="school">🏫 École</option>
            <option value="hotel">🏨 Hôtel</option>
            <option value="toilets">🚻 Toilettes publiques</option>
            <option value="drinking_water">💧 Point d'eau potable</option>
        </select>
    </div>

    <!-- List of Places -->
    <h2 class="mt-4" id="places-header" style="display: none;">List of Places</h2>
    <div class="table-responsive" id="places-list-container" style="display: none;">
        <table class="table table-striped table-bordered table-hover">
            <tbody id="places-list">
                <tr>
                    <td colspan="6" class="text-center">Please select a category.</td>
                </tr>
            </tbody>
        </table>
    </div>
</div>

<!-- Leaflet.js & Bootstrap -->
<link rel="stylesheet" href="https://unpkg.com/leaflet/dist/leaflet.css" />
<script src="https://unpkg.com/leaflet/dist/leaflet.js"></script>
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css">
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>

<script>
    // Initialize the map
    var map = L.map('map').setView([49.4431, 1.0993], 13);

    // Add OpenStreetMap tiles
    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png').addTo(map);

    // Custom red marker for user location
    var userLocationIcon = L.icon({
        iconUrl: 'https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-red.png',
        iconSize: [25, 41],
        iconAnchor: [12, 41],
        popupAnchor: [1, -34]
    });

    var userLocationMarker = L.marker([49.4431, 1.0993], { icon: userLocationIcon }).addTo(map);
    userLocationMarker.bindPopup("Vous êtes ici").openPopup();

    // Store the current markers for the map
    var markers = [];

    // Function to fetch and display services
    function fetchServices(filterType = '') {
        fetch(`/api/services?type=${filterType}`)
            .then(response => response.json())
            .then(data => {
                let placesList = document.getElementById('places-list');
                let placesListContainer = document.getElementById('places-list-container');
                let placesHeader = document.getElementById('places-header');
                placesList.innerHTML = ''; // Clear the current list

                // Clear existing markers from the map
                markers.forEach(marker => marker.remove());
                markers = [];

                // If no services found, show a message
                if (data.length === 0) {
                    placesList.innerHTML = '<tr><td colspan="6" class="text-center">No places found.</td></tr>';
                    placesListContainer.style.display = 'block';
                    placesHeader.style.display = 'block';
                } else {
                    // Loop over services and add markers and table rows
                    data.forEach(service => {
                        var marker = L.marker([service.latitude, service.longitude])
                            .addTo(map)
                            .bindPopup(`<b>${service.name}</b><br>${service.type}`);
                        markers.push(marker);

                        let row = document.createElement('tr');
                        row.innerHTML = `
                            <td><a class="list-places-a" href="/place/${service.id}">${service.name}</a></td>
                            <td>${service.type}</td>
                             <button class="favorite-btn" data-service="app_cafe">❤️</button>
                        `;
                        placesList.appendChild(row);
                    });

                    placesListContainer.style.display = 'block';
                    placesHeader.style.display = 'block';
                }
            })
            .catch(error => {
                console.error('Error loading data:', error);
                document.getElementById('places-list').innerHTML = `
                    <tr><td colspan="6" class="text-center text-danger">Error loading places.</td></tr>
                `;
            });
    }

    // Listen for changes on the filter dropdown
    document.getElementById('service-filter').addEventListener('change', function () {
        var selectedType = this.value;

        // Hide the places list and markers before fetching data
        document.getElementById('places-list-container').style.display = 'none';
        document.getElementById('places-header').style.display = 'none';

        // If a type is selected, fetch services, else leave the map and table empty
        if (selectedType) {
            fetchServices(selectedType);
        } else {
            markers.forEach(marker => marker.remove());
            markers = [];
            userLocationMarker.addTo(map);
        }
    });
</script>

{% endblock %}
